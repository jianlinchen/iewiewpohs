//
//  CustomViewController.m
//  Wei_Shop
//
//  Created by dzr on 15/10/29.
//  Copyright (c) 2015年 cjl. All rights reserved.
//
#import "ScanReaderViewController.h"
#import "CustomView.h"
#import "CustomViewController.h"
#import "ClientTableCell.h"
#import "Client.h"
#import "MassEmailController.h"
#import "DetailCustomController.h"
#import "ScanViewController.h"
#import "SeachClientController.h"
#import "SendMessageController.h"

@interface CustomViewController ()<UITableViewDataSource,UITableViewDelegate>{
    
    NSMutableArray *charArray;//字母数组
    NSMutableArray *detailArray;//客户资料
    
    UIImageView *imageView;
    UIView *transparentView;
    BOOL appearBlackView;
    int p;
    NSMutableArray *arrMut;
}

@end

@implementation CustomViewController
- (void)viewDidLoad {
    [super viewDidLoad];
    p=1;
    self.title=@"我的客户";
    UIBarButtonItem *lefttButton=[[UIBarButtonItem alloc]init];
    self.navigationItem.leftBarButtonItem=lefttButton;
    UIBarButtonItem *rightButton=[[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(AddAction:)];
    self.navigationItem.rightBarButtonItem=rightButton;
    
    arrMut=[[NSMutableArray alloc]init];
    charArray=[[NSMutableArray alloc]init];
    detailArray=[[NSMutableArray alloc]init];
    table = [[UITableView alloc]initWithFrame:CGRectMake(0, 40, KScreenWidth, KScreenHeight-155) ];
    table.delegate = self;
    table.dataSource = self;
    table.sectionIndexBackgroundColor = [UIColor clearColor];
    table.sectionIndexColor = [UIColor blackColor];
    [self.view addSubview:table];
    UIView *view = [[UIView alloc]init];
    table .tableFooterView = view;
//    table.footer = [MJRefreshBackStateFooter footerWithRefreshingBlock:^{
//        p ++;
//        [self loadDetail];
//        
//    }];
    
    table.header = self.header;
//    [self loadDetail];
}
- (void)loadNewData{
    [super loadNewData];
    
    p = 1;
    [table.footer resetNoMoreData];
    [self loadDetail];
}

-(void)loadDetail{
    NSDictionary *dic = @{@"shopId":GLOBARMANAGER.userConfig.shopId,@"pageIndex":@(p),@"pageSize":@(10000)};
    
    [HttpRequest getWebData:[GLOBARMANAGER AppKeyTokenDic:dic] path:CommonList method:@"GET" success:^(id object) {
        if (object) {
            
            if ([[object objectForKey:@"success"]intValue] == 1) {
                
                if(p == 1){
                    [arrMut removeAllObjects];
                    [charArray removeAllObjects];
                    [detailArray removeAllObjects];
                    [arrMut addObjectsFromArray:[object objectForKey:@"result"]];
                }else{
                    [arrMut addObjectsFromArray:[object objectForKey:@"result"]];
                }
                if(arrMut.count > 0){
                    [table reloadData];
                }
//                NSArray *sortedArray = [arrMut sortedArrayUsingComparator:^NSComparisonResult(id obj1, id obj2) {
//                    //这里的代码可以参照上面compare:默认的排序方法，也可以把自定义的方法写在这里，给对象排序
//                    NSComparisonResult result = [obj1[@"spell"] compare:obj2[@"spell"]];
//                    return result;
//                }];
                
                NSMutableArray *topArray = [NSMutableArray new];
                for(NSDictionary *dic in arrMut){
                    
                    [topArray addObject:dic[@"spell"]];
                }
                
                
                //字母排序的去重
                NSMutableArray *TwoArray = [NSMutableArray new];
                for (int i = 0 ; i< [topArray count]; i ++) {
                    if ( [TwoArray containsObject:topArray[i]]==NO) {
                        [TwoArray addObject:topArray[i]];
                    }
                }
                charArray=TwoArray;//一维数组已经确定。
                
                
                if (charArray.count!=0) {
                    detailArray = [self generateTwoArray:arrMut];
                }
                
                [table reloadData];
            }
            
        }
        if(p == 1 && arrMut.count == 0){
            [self showNoDataViewWithString2:@"暂无客户" andImage:nil];

        }else{
             [self removeNoDataView2];
        }
        if(p != 1){
              NSArray *array = [object objectForKey:@"result"];
            if(array.count < 10){
                [table.footer endRefreshingWithNoMoreData];
                
            }else{
                [table.footer endRefreshing];
            }
        }else{
            [table.header endRefreshing];
        }
        
        
    } fail:^(NSString *msg) {
        
//        NSLog(@"+++++++++++++++++++++++++++++++++++++++++++%@",msg);
    }];
    
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier = @"ClientTableCell";
    ClientTableCell*cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (!cell) {
        NSArray *nib = [[NSBundle mainBundle]loadNibNamed:@"ClientTableCell" owner:self options:nil];
        cell = [nib objectAtIndex:0];
        
    }

    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    Client *client=[[Client alloc]init];
    if (detailArray.count!=0) {
    client=[detailArray [indexPath.section] objectAtIndex:indexPath.row];
    [cell getClient:client];
    }
   
    
    return cell ;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 60;
}
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    return detailArray.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    if (detailArray.count==0) {
        return 1;
    }else{
        return [(NSMutableArray *)[detailArray objectAtIndex:section] count];
    }
}
-(NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView{
       return charArray;
}
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 20;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    
    Reachability * reach = [Reachability reachabilityWithHostname:@"www.baidu.com"];
    if (![reach isReachable]) {
        [Utils alertView:@"网络异常,请检查网络连接!"];
        return;
    }

    DetailCustomController *qc = [[DetailCustomController alloc]initWithNibName:@"DetailCustomController" bundle:nil];
    
    Client *client=[[Client alloc]init];
    if (detailArray.count!=0) {
        client=[detailArray[indexPath.section] objectAtIndex:indexPath.row];
    }
   
    qc.detailClient=client;
    [qc setHidesBottomBarWhenPushed:YES];
    [self.navigationController pushViewController:qc animated:YES];
    
}

- (NSInteger) tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index
{
        
    NSString *key = [charArray objectAtIndex:index];
    if (key == UITableViewIndexSearch) {
        [tableView setContentOffset:CGPointZero animated:NO];
        return NSNotFound;
    }
    
    return index;
}
-(NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath{
    return @"删除";
}
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        NSUInteger row = [indexPath row];
        Client *client=[[Client alloc]init];
        
            client=[detailArray[indexPath.section] objectAtIndex:indexPath.row];
   
        NSDictionary *dic = @{@"shopId":GLOBARMANAGER.userConfig.shopId,@"customerId":client.customerId};
        
        [HttpRequest getWebData:[GLOBARMANAGER AppKeyTokenDic:dic] path:DeleteCustomer method:@"GET" success:^(id object) {
            if (object) {
                
                if ([[object objectForKey:@"success"]intValue] == 1) {
                    
                    NSMutableArray *array = detailArray[indexPath.section];
                    [array removeObjectAtIndex:row];
                    if (array.count == 0) {
                        [detailArray removeObjectAtIndex:indexPath.section];
                        [charArray removeObjectAtIndex:indexPath.section];
                    }
                    
                    [table reloadData];
                    
                }
            }
        } fail:^(NSString *msg) {
            
        }];
        
    }
}
-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    
    UIView *bgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 20)];
    bgView.backgroundColor = [UIColor groupTableViewBackgroundColor];
    
    UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(13, 0, 250, 20)];
    titleLabel.backgroundColor = [UIColor clearColor];
    titleLabel.textColor = [UIColor blackColor];
    titleLabel.font = [UIFont systemFontOfSize:15];
    if (charArray.count!=0) {
        NSString *key = [charArray objectAtIndex:section];
         titleLabel.text = key;
    [bgView addSubview:titleLabel];
    }
   
   
    return bgView;

}


-(void)viewWillAppear:(BOOL)animated{
     [super viewWillAppear:animated];
    Reachability * reach = [Reachability reachabilityWithHostname:@"www.baidu.com"];
    if (![reach isReachable]) {
        [Utils alertView:@"网络异常,请检查网络连接!"];
        return;
    }
    [self loadDetail];
    [charArray removeAllObjects];
    [detailArray removeAllObjects];
    [arrMut removeAllObjects];
//    [self.navigationController setNavigationBarHidden:YES animated:NO];
//
    
    
}
-(void)viewWillDisappear:(BOOL)animated{
     [super viewWillAppear:animated];

    [self.navigationController setNavigationBarHidden:NO animated:NO];

    [imageView removeFromSuperview];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
- (IBAction)goSearchAction:(id)sender {
    
    SeachClientController *qc = [[SeachClientController alloc]initWithNibName:@"SeachClientController" bundle:nil];
    [qc setHidesBottomBarWhenPushed:YES];
    //    qc.title=@"搜索";
    [self.navigationController pushViewController:qc animated:YES];
    
}


- (IBAction)AddAction:(id)sender {
//    NSLog(@"1231231");
//    UIView *view=[[UIView alloc]initWithFrame:CGRectMake(0, 0, KScreenWidth, KScreenHeight)];
//    view.backgroundColor=[UIColor redColor];
//    [self.tabBarController.tabBar.window addSubview:view];
  [CustomView showCustomAlertViewAtView:self.tabBarController.view withTitleArr:@[@"添加客户",@"群发消息"] andImageArr:@[@"2_add.png",@"2_message.png"] andCallback:^(NSInteger obj) {
    
//    [CustomView showCustomAlertViewAtView:self.view withTitleArr:@[@"添加客户",@"群发消息"] andImageArr:@[@"2_add.png",@"2_message.png"] andCallback:^(NSInteger obj) {
    
        if (obj==0) {
            
            if([GLOBARMANAGER checkCameraEnable]){
                ScanReaderViewController *VC = [[ScanReaderViewController alloc]initWithNibName:@"ScanReaderViewController" bundle:nil];
                NSString *tt=@"111";
                VC.fromcouSto=tt ;
                VC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:VC animated:YES];
            }
            }else{
                if (charArray.count!=0) {
                    SendMessageController*qc = [[SendMessageController alloc]initWithNibName:@"SendMessageController" bundle:nil];
                    qc.oneOneArray=charArray;
                    qc.twoTwoArray=detailArray;
                    [qc setHidesBottomBarWhenPushed:YES];
                    [self.navigationController pushViewController:qc animated:YES];
                }else{
                     [SVProgressHUD showErrorWithStatus:@"请先添加用户，再群发消息"];
                }

        }
//        NSLog(@"%ld",(long)obj);
    }];

}


- (NSMutableArray *)generateTwoArray:(NSArray *)array{
    
//    NSArray *sortedArray = [array sortedArrayUsingComparator:^NSComparisonResult(id obj1, id obj2) {
//        //这里的代码可以参照上面compare:默认的排序方法，也可以把自定义的方法写在这里，给对象排序
//        NSComparisonResult result = [obj1[@"spell"] compare:obj2[@"spell"]];
//        return result;
//    }];
    
    NSMutableArray *topArray = [NSMutableArray new];
    
    for(NSDictionary *dic in array){
        
        [topArray addObject:dic[@"spell"]];
    }
    
    
    NSSet *set = [NSSet setWithArray:topArray];
    
    
    NSMutableArray *TwoArray = [NSMutableArray new];
    for (int i  = 0; i < set.count; i ++) {
        [TwoArray addObject:[NSMutableArray new]];
    }
    
    NSString *spell = array[0][@"spell"];
    
    int lie = 0;
    
    for (int i = 0; i < array.count; i ++) {
        
        NSDictionary *clientDic = array[i];
        Client *client=[[Client alloc]init];
        [client getClient:clientDic];
        
        
        if([array[i][@"spell"] isEqualToString:spell]){
            NSMutableArray *array = TwoArray[lie];
            [array addObject:client];
            
        }else{
            
            lie++;
            spell = array[i][@"spell"];
            NSMutableArray *array = TwoArray[lie];
            [array addObject:client];
        }
        
    }
    
    
    
    return TwoArray;
}
@end
